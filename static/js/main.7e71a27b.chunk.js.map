{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","value","onClick","Board","squares","reducer","state","action","type","xIsNext","payload","step","history","slice","concat","Game","useReducer","Array","fill","dispatch","current","length","winner","calculateWinner","status","moves","map","move","desc","jumpTo","i","handleClick","winnerLines","isDraw","a","b","c","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAEe,SAASA,EAAOC,GAC3B,OACA,wBACIC,UAAWD,EAAME,MAAQ,eAAe,MACxCC,QAASH,EAAMG,QAFnB,SAGSH,EAAME,QCJJ,SAASE,EAAMJ,GAC1B,OACI,sBAAKC,UAAU,QAAf,UACI,gCACI,cAACF,EAAD,CACIG,MAAOF,EAAMK,QAAQ,GACrBF,QAAS,WAAKH,EAAMG,QAAQ,MAEhC,cAACJ,EAAD,CACIG,MAAOF,EAAMK,QAAQ,GACrBF,QAAS,WAAKH,EAAMG,QAAQ,MAEhC,cAACJ,EAAD,CACIG,MAAOF,EAAMK,QAAQ,GACrBF,QAAS,WAAKH,EAAMG,QAAQ,SAGpC,gCACI,cAACJ,EAAD,CACIG,MAAOF,EAAMK,QAAQ,GACrBF,QAAS,WAAKH,EAAMG,QAAQ,MAEhC,cAACJ,EAAD,CACIG,MAAOF,EAAMK,QAAQ,GACrBF,QAAS,WAAKH,EAAMG,QAAQ,MAEhC,cAACJ,EAAD,CACIG,MAAOF,EAAMK,QAAQ,GACrBF,QAAS,WAAKH,EAAMG,QAAQ,SAGpC,gCACI,cAACJ,EAAD,CACIG,MAAOF,EAAMK,QAAQ,GACrBF,QAAS,WAAKH,EAAMG,QAAQ,MAEhC,cAACJ,EAAD,CACIG,MAAOF,EAAMK,QAAQ,GACrBF,QAAS,WAAKH,EAAMG,QAAQ,MAEhC,cAACJ,EAAD,CACIG,MAAOF,EAAMK,QAAQ,GACrBF,QAAS,WAAKH,EAAMG,QAAQ,YC1ChD,IAAMG,EAAU,SAACC,EAAOC,GACpB,OAAOA,EAAOC,MACV,IAAK,OACD,OAAO,2BAAIF,GAAX,IACIG,QAASF,EAAOG,QAAQC,KAAK,IAAM,EACnCC,QAASN,EAAMM,QAAQC,MAAM,EAAGN,EAAOG,QAAQC,KAAO,KAE9D,IAAK,OACD,OAAO,2BAAIL,GAAX,IACIM,QAASN,EAAMM,QAAQE,OAAO,CAC9BV,QAASG,EAAOG,QAAQN,UAExBK,SAAUH,EAAMG,UAExB,QACI,OAAOH,IAIJ,SAASS,IACpB,MAA0BC,qBAAWX,EAAQ,CACzCI,SAAS,EACTG,QAAS,CAAC,CAACR,QAASa,MAAM,GAAGC,KAAK,UAFtC,mBAAOZ,EAAP,KAAca,EAAd,KAIOV,EAAmBH,EAAnBG,QAAQG,EAAWN,EAAXM,QAgBTQ,EAAUR,EAAQA,EAAQS,OAAS,GACnCC,EAASC,EAAgBH,EAAQhB,SAEjCoB,EAASF,EACE,MAAXA,EACI,OACA,aAAeA,EACnB,mBAAqBb,EAAQ,IAAI,KAEjCgB,EAAQb,EAAQc,KAAI,SAACf,EAAKgB,GAC5B,IAAMC,EAAOD,EAAO,UAAYA,EAAM,iBACtC,OAAQ,6BACJ,wBAAQzB,QAAS,kBA1BV,SAACS,GACZQ,EAAS,CAACX,KAAM,OAAQE,QAAS,CAACC,UAyBPkB,CAAOF,IAA9B,SACKC,KAFQD,MAOrB,OACI,sBAAK3B,UAAWsB,EAAS,gBAAgB,OAAzC,UACI,qBAAKtB,UAAU,aAAf,SACI,cAACG,EAAD,CAAOD,QAAS,SAAC4B,GAAD,OA/BR,SAACA,GACjB,IACM1B,EADUQ,EAAQA,EAAQS,OAAS,GACjBjB,QAAQS,QACjBU,EAAgBnB,IAClBA,EAAQ0B,KAGrB1B,EAAQ0B,GAAKrB,EAAS,IAAI,IAC1BU,EAAS,CAACX,KAAM,OAAQE,QAAS,CAACN,cAuBH2B,CAAYD,IAAI1B,QAASgB,EAAQhB,YAE5D,sBAAKJ,UAAU,YAAf,UACI,8BAAMwB,IACN,6BAAKC,UAMrB,IAAMF,EAAkB,SAACnB,GAarB,IAZA,IAAM4B,EAAc,CAChB,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAGLC,GAAS,EACLH,EAAI,EAAGA,EAAIE,EAAYX,OAAQS,IAAI,CACvC,kBAAgBE,EAAYF,GAA5B,GAAOI,EAAP,KAASC,EAAT,KAAWC,EAAX,KACA,GAAGhC,EAAQ8B,IAAM9B,EAAQ8B,KAAO9B,EAAQ+B,IAAM/B,EAAQ+B,KAAO/B,EAAQgC,GACjE,OAAOhC,EAAQ8B,GAEf9B,EAAQ8B,IAAO9B,EAAQ+B,IAAO/B,EAAQgC,KACtCH,GAAS,GAGjB,OAAGA,EAAe,IACX,MCzFII,MAJf,WACE,OAAO,cAACtB,EAAD,KCOMuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7e71a27b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Square(props) {\r\n    return (\r\n    <button \r\n        className={props.value ? \"btn disabled\":\"btn\"} \r\n        onClick={props.onClick}>\r\n            {props.value}\r\n    </button>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport Square from './Square'\r\n\r\nexport default function Board(props) {\r\n    return (\r\n        <div className=\"board\">\r\n            <div>\r\n                <Square \r\n                    value={props.squares[0]} \r\n                    onClick={()=>{props.onClick(0)}} \r\n                />\r\n                <Square \r\n                    value={props.squares[1]} \r\n                    onClick={()=>{props.onClick(1)}} \r\n                />\r\n                <Square \r\n                    value={props.squares[2]} \r\n                    onClick={()=>{props.onClick(2)}} \r\n                />\r\n            </div>\r\n            <div>\r\n                <Square \r\n                    value={props.squares[3]} \r\n                    onClick={()=>{props.onClick(3)}} \r\n                />\r\n                <Square \r\n                    value={props.squares[4]} \r\n                    onClick={()=>{props.onClick(4)}} \r\n                />\r\n                <Square \r\n                    value={props.squares[5]} \r\n                    onClick={()=>{props.onClick(5)}} \r\n                />\r\n            </div>\r\n            <div>\r\n                <Square \r\n                    value={props.squares[6]} \r\n                    onClick={()=>{props.onClick(6)}} \r\n                />\r\n                <Square \r\n                    value={props.squares[7]} \r\n                    onClick={()=>{props.onClick(7)}} \r\n                />\r\n                <Square \r\n                    value={props.squares[8]} \r\n                    onClick={()=>{props.onClick(8)}} \r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport Board from './Board'\r\n\r\nconst reducer = (state, action) =>{\r\n    switch(action.type){\r\n        case 'JUMP':\r\n            return {...state,\r\n                xIsNext: action.payload.step%2 === 0,\r\n                history: state.history.slice(0, action.payload.step + 1),\r\n            };\r\n        case 'MOVE':\r\n            return {...state, \r\n                history: state.history.concat({\r\n                squares: action.payload.squares\r\n                }),\r\n                xIsNext: !state.xIsNext,\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default function Game() {\r\n    const [state, dispatch] = useReducer(reducer,{\r\n        xIsNext: true,\r\n        history: [{squares: Array(9).fill(null)}],\r\n    });\r\n    const {xIsNext,history} = state;\r\n\r\n    const jumpTo = (step) => {\r\n        dispatch({type: 'JUMP', payload: {step}});\r\n    }\r\n\r\n    const handleClick = (i) =>{\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        const winner = calculateWinner(squares);\r\n        if(winner || squares[i]){\r\n            return;\r\n        }\r\n        squares[i] = xIsNext? 'X':'O';\r\n        dispatch({type: 'MOVE', payload: {squares}});\r\n    };\r\n    const current = history[history.length - 1];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const status = winner \r\n        ? winner === 'D'\r\n            ? 'Draw'\r\n            : 'Winner is ' + winner \r\n        : 'Next player is ' + (xIsNext?'X':'O');\r\n\r\n    const moves = history.map((step,move) => {\r\n        const desc = move ? 'Go to #' + move: 'Start the game';\r\n        return (<li key={move}>\r\n            <button onClick={() => jumpTo(move)}>\r\n                {desc}\r\n            </button>\r\n        </li>);\r\n    });\r\n    //const squares = Array(9).fill(null);\r\n    return (\r\n        <div className={winner ? \"game disabled\":\"game\"}>\r\n            <div className=\"game-board\">\r\n                <Board onClick={(i) => handleClick(i)} squares={current.squares}></Board>\r\n            </div>\r\n            <div className=\"game-info\">\r\n                <div>{status}</div>\r\n                <ul>{moves}</ul>                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst calculateWinner = (squares) => {\r\n    const winnerLines = [\r\n        [0,1,2],\r\n        [3,4,5],\r\n        [6,7,8],\r\n        [0,3,6],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [0,4,8],\r\n        [2,4,6]\r\n    ];\r\n\r\n    let isDraw = true;\r\n    for(let i = 0; i < winnerLines.length; i++){\r\n        const [a,b,c] = winnerLines[i];\r\n        if(squares[a] && squares[a] === squares[b] && squares[b] === squares[c]){\r\n            return squares[a];\r\n        }\r\n        if(!squares[a] || !squares[b] || !squares[c]){\r\n            isDraw = false;\r\n        }\r\n    }\r\n    if(isDraw) return 'D';\r\n    return null;\r\n}\r\n","//import logo from './logo.svg';\nimport './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}